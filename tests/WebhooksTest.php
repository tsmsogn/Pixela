<?php

namespace Pixela\Test;

use Pixela\Api\Graphs;
use Pixela\Api\User;
use Pixela\Api\Webhooks;
use Pixela\Client;

class WebhooksTest extends PixelaTestCase
{
    /**
     * @var \Pixela\ClientInterface
     */
    public $client;

    /**
     * @var \Pixela\Api\User
     */
    public $user;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->client = new Client(self::USERNAME, self::TOKEN);

        $this->user = $this->client->api('User');
        $this->user->create();
    }

    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        $this->user->delete();
    }

    /**
     * @return void
     * @throws \GuzzleHttp\Exception\GuzzleException
     */
    public function testCRUD()
    {
        $graph = $this->client->api('Graphs');
        $graph->setId('test-graph')
            ->setName('graph-name')
            ->setUnit('commit')
            ->setType('int')
            ->setColor('shibafu');
        $this->assertTrue($graph->create());

        /** @var \Pixela\Api\Webhooks $webhook */
        $webhook = $this->client->api('Webhooks');

        $webhook->setGraphID('test-graph')
            ->setType('increment');

        // Create webhook
        $this->assertTrue($webhook->create());

        // Test
        $webhooks = $webhook->get();
        $this->assertCount(1, $webhooks);
        $this->assertEquals($webhook, $webhooks[0]);

        // Invoke webhook
        $this->assertTrue($webhook->invoke());

        // Delete webhook
        $this->assertTrue($webhook->delete());

        // Test
        $webhooks = $webhook->get();
        $this->assertCount(0, $webhooks);
    }
}